{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _googleSignin = require(\"@react-native-community/google-signin\");\n\nvar _reactNativeFbsdk = require(\"react-native-fbsdk\");\n\nvar _background = require(\"./background\");\n\nvar _addLinks = require(\"./addLinks\");\n\nvar _reactNativeUnimodules = require(\"react-native-unimodules\");\n\nvar RNFS = _interopRequireWildcard(require(\"react-native-fs\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Douchington\\\\Desktop\\\\Scripts\\\\ffbeDataExporterMobile\\\\App.js\";\n\nvar App = function App() {\n  var _useState = (0, _react.useState)(),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      googleData = _useState2[0],\n      setGoogleData = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      fbData = _useState4[0],\n      setfbData = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      loggedInWithFB = _useState6[0],\n      setLoggedInWithFB = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      userData = _useState8[0],\n      setUserData = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(false),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var GsignIn = function GsignIn() {\n    var userInfo;\n    return _regenerator.default.async(function GsignIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regenerator.default.awrap(_googleSignin.GoogleSignin.hasPlayServices());\n\n          case 3:\n            _context.next = 5;\n            return _regenerator.default.awrap(_googleSignin.GoogleSignin.signIn());\n\n          case 5:\n            userInfo = _context.sent;\n            setGoogleData(userInfo);\n            console.log('signed in');\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n\n            if (_context.t0.code === _googleSignin.statusCodes.SIGN_IN_CANCELLED) {\n              console.log('login cancelled', _context.t0);\n            } else if (_context.t0.code === _googleSignin.statusCodes.IN_PROGRESS) {\n              console.log('sign in already in progress', _context.t0);\n            } else if (_context.t0.code === _googleSignin.statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\n              console.log('play services not available or outdated', _context.t0);\n            } else {\n              console.log('error', _context.t0, _context.t0.code);\n            }\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var GsignOut = function GsignOut() {\n    return _regenerator.default.async(function GsignOut$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regenerator.default.awrap(_googleSignin.GoogleSignin.revokeAccess());\n\n          case 3:\n            _context2.next = 5;\n            return _regenerator.default.awrap(_googleSignin.GoogleSignin.signOut());\n\n          case 5:\n            setGoogleData(null);\n            console.log('signed out');\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error('signout error', _context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  (0, _react.useEffect)(function () {\n    _googleSignin.GoogleSignin.configure({\n      scopes: ['profile'],\n      webClientId: '662967411403-6u6k7oj0dd4i1ne8gah7f7h848b9l3pq.apps.googleusercontent.com',\n      offlineAccess: true\n    });\n  }, []);\n  (0, _react.useEffect)(function () {\n    if (googleData) {\n      var getGoogleUserData = function getGoogleUserData() {\n        var GoogleTokens, ffbeUserData;\n        return _regenerator.default.async(function getGoogleUserData$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.log('getting ffbe data');\n                setLoading(true);\n                _context3.next = 4;\n                return _regenerator.default.awrap(_googleSignin.GoogleSignin.getTokens());\n\n              case 4:\n                GoogleTokens = _context3.sent;\n                _context3.next = 7;\n                return _regenerator.default.awrap((0, _background.getUserData)(googleData.user.id, GoogleTokens.accessToken, true));\n\n              case 7:\n                ffbeUserData = _context3.sent;\n                setUserData(ffbeUserData);\n                setLoading(false);\n                console.log('ffbe data acquired');\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      getGoogleUserData();\n    }\n  }, [googleData]);\n  (0, _react.useEffect)(function () {\n    if (fbData) {\n      var getFBUserData = function getFBUserData() {\n        return _regenerator.default.async(function getFBUserData$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log('getting ffbe data');\n                setLoading(true);\n                setUserData(ffbeUserData);\n                setLoading(false);\n                console.log('ffbe data acquired');\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      getFBUserData();\n    }\n  }, [fbData]);\n  console.log('fbData', fbData);\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, \"FFBE Data Exporter (Facebook/Google)\"), _react.default.createElement(_reactNative.View, {\n    id: \"GoogleSigninContainer\",\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.googleSignInButton,\n    onPress: !googleData ? GsignIn : GsignOut,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: {\n      width: 48,\n      height: 48\n    },\n    source: require('./google_signin_buttons/android/xxxhdpi/btn_google_light_normal_xxxhdpi.9.png'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: {\n      color: 'white',\n      padding: 8,\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, !googleData ? 'Sign in with Google' : 'Sign out of Google'))), _react.default.createElement(_reactNativeFbsdk.LoginButton, {\n    publishPermissions: [\"email\"],\n    onLogoutFinished: function onLogoutFinished() {\n      setfbData(null);\n      console.log(\"logged out of Facebook\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    id: \"how-to-use\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    id: \"how-to-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, \"How to use this\"), _react.default.createElement(_reactNative.Text, {\n    style: {\n      fontWeight: 'bold',\n      color: 'black',\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, \"If your FFBE account is linked to Google\"), _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, \"Click on \\\"Start Google based Export\\\". A new tab will open, with a google login form. Input account name, password, then agree. That tab will close, and you'll get back here. After some seconds, you should be able to download your data files (units, inventory and espers)\"), _react.default.createElement(_reactNative.Text, {\n    style: {\n      fontWeight: 'bold',\n      color: 'black',\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, \"If your FFBE account is linked to Facebook\"), _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, \"Click on \\\"Start Facebook based Export\\\". A new tab will open, on Facebook. Make sure you're logged in facebook, and that the facebook page finished loading. Then come back on this tab and click on \\\"Continue Facebook Export\\\". After some seconds, you should be able to download your data files (units, inventory, espers, and consumables)\")), loading ? loadingIndicator(loading) : userData ? downloadButtons(userData) : _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 85\n    }\n  }));\n};\n\nvar loadingIndicator = function loadingIndicator(isLoading) {\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.loadingcontainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: {\n      color: \"black\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, \"Loading\"), _react.default.createElement(_reactNative.ActivityIndicator, {\n    animating: isLoading,\n    size: \"large\",\n    color: \"#999999\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar downloadButtons = function downloadButtons(data) {\n  var downloadInvetory = function downloadInvetory(data) {\n    var _addInventoryLink, inventoryHref, inventoryDownload, granted, readGranted, writeGranted, path;\n\n    return _regenerator.default.async(function downloadInvetory$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _addInventoryLink = (0, _addLinks.addInventoryLink)(data), inventoryHref = _addInventoryLink.inventoryHref, inventoryDownload = _addInventoryLink.inventoryDownload;\n            console.log(inventoryDownload);\n            _context5.prev = 2;\n            _context5.next = 5;\n            return _regenerator.default.awrap(_reactNative.PermissionsAndroid.requestMultiple([_reactNative.PermissionsAndroid.PERMISSIONS.WRITE_EXTERNAL_STORAGE, _reactNative.PermissionsAndroid.PERMISSIONS.READ_EXTERNAL_STORAGE]));\n\n          case 5:\n            granted = _context5.sent;\n            _context5.next = 11;\n            break;\n\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](2);\n            console.warn(_context5.t0);\n\n          case 11:\n            _context5.next = 13;\n            return _regenerator.default.awrap(_reactNative.PermissionsAndroid.check(_reactNative.PermissionsAndroid.PERMISSIONS.READ_EXTERNAL_STORAGE));\n\n          case 13:\n            readGranted = _context5.sent;\n            _context5.next = 16;\n            return _regenerator.default.awrap(_reactNative.PermissionsAndroid.check(_reactNative.PermissionsAndroid.PERMISSIONS.WRITE_EXTERNAL_STORAGE));\n\n          case 16:\n            writeGranted = _context5.sent;\n\n            if (!(!readGranted || !writeGranted)) {\n              _context5.next = 20;\n              break;\n            }\n\n            console.log('Read and write permissions have not been granted');\n            return _context5.abrupt(\"return\");\n\n          case 20:\n            path = \"\" + RNFS.ExternalStorageDirectoryPath;\n            console.log('path', path);\n            path += inventoryDownload;\n            RNFS.writeFile(path, inventoryHref, 'utf8').then(function (success) {\n              console.log('Success');\n            }).catch(function (err) {\n              console.log(err.message);\n            });\n\n          case 24:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[2, 8]], Promise);\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    id: \"download-button-container\",\n    style: styles.downloadButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.downloadButton,\n    onPress: function onPress() {\n      return downloadInvetory(data);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 94\n    }\n  }, \"Inventory\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.downloadButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 55\n    }\n  }, \"Units\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.downloadButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 55\n    }\n  }, \"Espers\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.downloadButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 55\n    }\n  }, \"Consumables\")));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    height: '100%',\n    width: \"100%\"\n  },\n  downloadButton: {\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10\n  },\n  downloadButtonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 10\n  },\n  googleSignInButton: {\n    marginTop: 5,\n    marginBottom: 5,\n    width: 190,\n    height: 45,\n    backgroundColor: '#4285f4',\n    borderRadius: 2,\n    flexDirection: 'row',\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3\n  },\n  loadingcontainer: {\n    flex: 1,\n    justifyContent: \"center\"\n  }\n});\n\nvar _default = App;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Douchington/Desktop/Scripts/ffbeDataExporterMobile/App.js"],"names":["App","googleData","setGoogleData","fbData","setfbData","loggedInWithFB","setLoggedInWithFB","userData","setUserData","loading","setLoading","GsignIn","GoogleSignin","hasPlayServices","signIn","userInfo","console","log","code","statusCodes","SIGN_IN_CANCELLED","IN_PROGRESS","PLAY_SERVICES_NOT_AVAILABLE","GsignOut","revokeAccess","signOut","error","configure","scopes","webClientId","offlineAccess","getGoogleUserData","getTokens","GoogleTokens","user","id","accessToken","ffbeUserData","getFBUserData","styles","container","flexDirection","googleSignInButton","width","height","require","color","padding","fontWeight","fontSize","loadingIndicator","downloadButtons","isLoading","loadingcontainer","data","downloadInvetory","inventoryHref","inventoryDownload","PermissionsAndroid","requestMultiple","PERMISSIONS","WRITE_EXTERNAL_STORAGE","READ_EXTERNAL_STORAGE","granted","warn","check","readGranted","writeGranted","path","RNFS","ExternalStorageDirectoryPath","writeFile","then","success","catch","err","message","downloadButtonContainer","downloadButton","StyleSheet","create","borderWidth","borderRadius","justifyContent","marginTop","marginBottom","backgroundColor","alignItems","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","flex"],"mappings":"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","sourcesContent":["/*\nNotes:\nto get key hash for fb, take SHA1 (hex) and convert to base64\nXo8WBi6jzSxKDVR4drqm84yr9iU=\nget SHA1 by path to app/android/ \n./gradlew signingReport\n*/\n//\"displayName\": \"ffbeDataExporterMobile\" in app.json\nimport React, { useEffect, useState } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  Image,\n  ActivityIndicator,\n  PermissionsAndroid\n} from 'react-native';\n// import { ProgressBar, Colors } from 'react-native-paper';\nimport { GoogleSignin, statusCodes } from '@react-native-community/google-signin';\nimport { LoginButton, AccessToken, LoginManager } from 'react-native-fbsdk';\nimport { getUserData } from './background'\nimport { addInventoryLink } from './addLinks'\nimport { FileSystem, MediaLibrary, Permissions } from 'react-native-unimodules'\nimport * as RNFS from 'react-native-fs'\n\n\nconst App = () => {\n  const [googleData, setGoogleData] = useState()\n  const [fbData, setfbData] = useState()\n  const [loggedInWithFB, setLoggedInWithFB] = useState(false)\n  // const [GoogleAccessToken, setGoogleAccessToken] = useState()\n  // const [userData, setUserData] = useState({userdata:'', userData2:'', userData3:''})\n  const [userData, setUserData] = useState()\n  const [loading, setLoading] = useState(false)\n\n  //  console.log('google data', googleData)\n\n\n  const GsignIn = async () => {\n    try {\n      await GoogleSignin.hasPlayServices();\n      const userInfo = await GoogleSignin.signIn();\n      setGoogleData(userInfo)\n      console.log('signed in')\n    } catch (error) {\n      if (error.code === statusCodes.SIGN_IN_CANCELLED) {\n        // user cancelled the login flow\n        console.log('login cancelled', error)\n      } else if (error.code === statusCodes.IN_PROGRESS) {\n        // operation (e.g. sign in) is in progress already\n        console.log('sign in already in progress', error)\n      } else if (error.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\n        // play services not available or outdated\n        console.log('play services not available or outdated', error)\n      } else {\n        // some other error happened\n        console.log('error', error, error.code)\n      }\n    }\n  }\n\n  const GsignOut = async () => {\n    try {\n      await GoogleSignin.revokeAccess();\n      await GoogleSignin.signOut();\n      setGoogleData(null)\n      console.log('signed out')\n    } catch (error) {\n      console.error('signout error', error);\n    }\n  };\n\n  useEffect(() => {\n    GoogleSignin.configure({\n      scopes: ['profile'],//'email'\n      webClientId: '662967411403-6u6k7oj0dd4i1ne8gah7f7h848b9l3pq.apps.googleusercontent.com',\n      offlineAccess: true\n    })\n    // LoginManager.logOut()\n  }, [])\n\n  useEffect(() => {\n    if (googleData) {\n      const getGoogleUserData = async () => {\n        console.log('getting ffbe data')\n        setLoading(true)\n        const GoogleTokens = await GoogleSignin.getTokens()\n        const ffbeUserData = await getUserData(googleData.user.id, GoogleTokens.accessToken, true)\n        setUserData(ffbeUserData)\n        setLoading(false)\n        console.log('ffbe data acquired')\n        // setGoogleAccessToken(GoogleTokens.accessToken)\n      }\n      getGoogleUserData();\n    }\n  }, [googleData])\n\n  //change ffbeUserData variables from my app to FFBE stuff\n  useEffect(()=>{\n    if(fbData){\n      // console.log('fb token', fbData)\n      const getFBUserData = async () =>{\n        console.log('getting ffbe data')\n        setLoading(true)\n        //const ffbeUserData = getUserData(fbData.userID, fbData.accessToken, false)\n        //const ffbeUserData = getUserData('10105404585020182', 'EAARmB9evD0cBAEW6nS6HkXCFfbtqk7GbmWgL1DqQm41TfTffHZB2dEfZBaJfrrtKdOfHhRGeqvdIVZCiAZB88wyVoSDZBxVcRsrcfrb7suT9zMQVA3cfkdVTCZBffB55gawp6gugO0I2arK6ZBCDXMA3jQlN03WGCovmW5tRDBknk2JoaJVc4EpPFN0SNDqLjER2e7mN5gsMAZDZD' , false)\n        setUserData(ffbeUserData)\n        setLoading(false)\n        console.log('ffbe data acquired')\n      }\n      getFBUserData()\n    }\n  },[fbData])\nconsole.log('fbData', fbData)\n  return (\n    <View style={styles.container}>\n      <Text >FFBE Data Exporter (Facebook/Google)</Text>\n      <View id=\"GoogleSigninContainer\" style={{ flexDirection: 'row' }}>\n        <TouchableOpacity style={styles.googleSignInButton} onPress={!googleData ? GsignIn : GsignOut}>\n          <Image\n            style={{ width: 48, height: 48 }}\n            source={require('./google_signin_buttons/android/xxxhdpi/btn_google_light_normal_xxxhdpi.9.png')}>\n          </Image>\n          <Text style={{ color: 'white', padding: 8, fontWeight: 'bold' }}>{!googleData ? 'Sign in with Google' : 'Sign out of Google'}</Text>\n        </TouchableOpacity>\n      </View>\n      <LoginButton\n          publishPermissions={[\"email\"]}\n          // onLoginFinished={\n          //   (error, result) => {\n          //     if (error) {\n          //       console.log(\"Login failed with error: \" + error.message);\n          //     } else if (result.isCancelled) {\n          //       alert(\"Login was cancelled\");\n          //     } else {\n                \n          //       AccessToken.getCurrentAccessToken().then(\n          //         data=> {\n          //           setfbData(data)\n          //         }\n          //       )\n          //     }\n          //   }\n          // }\n          onLogoutFinished={() => {\n            setfbData(null)\n            // setLoggedInWithFB(false)\n            console.log(\"logged out of Facebook\")\n            // \n          }}\n      />\n      {/* <LoginButton\n        permissions={[\"email\", \"public_profile\"]}\n        onLoginFinished={\n          async (error, result) => {\n            if (result.isCancelled) {\n              alert('Facebook Login Cancelled')\n            } else {\n              try {\n                const token = await AccessToken.getCurrentAccessToken()\n                console.log('fb token', token)\n                setfbData(token)\n              } catch (error) {\n                console.log('login error', error)\n              }\n              console.log('result', result)\n            }\n          },\n          console.log('fb logged in')\n        }\n        onLogoutFinished={() => {\n          setfbData(null)\n          console.log(\"logged out of Facebook\")\n        }\n        } /> */}\n      <View id=\"how-to-use\">\n        <Text id=\"how-to-header\">How to use this</Text>\n        <Text style={{ fontWeight: 'bold', color: 'black', fontSize: 20 }}>If your FFBE account is linked to Google</Text>\n        <Text>Click on \"Start Google based Export\". A new tab will open, with a google login form. Input account name, password, then agree. That tab will close, and you'll get back here. After some seconds, you should be able to download your data files (units, inventory and espers)</Text>\n        <Text style={{ fontWeight: 'bold', color: 'black', fontSize: 20 }}>If your FFBE account is linked to Facebook</Text>\n        <Text>Click on \"Start Facebook based Export\". A new tab will open, on Facebook. Make sure you're logged in facebook, and that the facebook page finished loading. Then come back on this tab and click on \"Continue Facebook Export\". After some seconds, you should be able to download your data files (units, inventory, espers, and consumables)</Text>\n      </View>\n      {loading ? loadingIndicator(loading) : userData ? downloadButtons(userData) : <Text></Text>}\n    </View>\n  )\n};\n\nconst loadingIndicator = (isLoading) => {\n  return (\n    <View style={styles.loadingcontainer}>\n      {/* <Text style={{color:\"black\"}}>{loading ? \"loading\": \"done\"}</Text> */}\n      <Text style={{ color: \"black\" }}>Loading</Text>\n      <ActivityIndicator animating={isLoading} size=\"large\" color='#999999' />\n    </View>\n  )\n}\n\n//use Expo Filesystem.writeAsStringAsync? instead of anchor elements\nconst downloadButtons = (data) => {\n  // const [permissionAccess, setPermissionAccess] = useEffect()\n\n  // const getPermissions = async () =>{\n  //   try {\n  //     const granted = await PermissionsAndroid.requestMultiple([\n  //       PermissionsAndroid.PERMISSIONS.WRITE_EXTERNAL_STORAGE,\n  //       PermissionsAndroid.PERMISSIONS.READ_EXTERNAL_STORAGE,\n  //     ]);\n  //   } catch (err) {\n  //     console.warn(err);\n  //   }\n  // }\n\n  const downloadInvetory = async (data) => {\n    const { inventoryHref, inventoryDownload } = addInventoryLink(data)\n    console.log(inventoryDownload)\n    try {\n      const granted = await PermissionsAndroid.requestMultiple([\n        PermissionsAndroid.PERMISSIONS.WRITE_EXTERNAL_STORAGE,\n        PermissionsAndroid.PERMISSIONS.READ_EXTERNAL_STORAGE,\n      ]);\n    } catch (err) {\n      console.warn(err);\n    }\n    const readGranted = await PermissionsAndroid.check(PermissionsAndroid.PERMISSIONS.READ_EXTERNAL_STORAGE); \n    const writeGranted = await PermissionsAndroid.check(PermissionsAndroid.PERMISSIONS.WRITE_EXTERNAL_STORAGE);\n    if(!readGranted || !writeGranted) {\n      console.log('Read and write permissions have not been granted');\n      return;\n    }\n    var path = `${RNFS.ExternalStorageDirectoryPath}`;\n    console.log('path', path)\n    // RNFS.mkdir(path)\n    path += inventoryDownload\n    RNFS.writeFile(path, inventoryHref, 'utf8')\n      .then((success) => {\n        console.log('Success');\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n\n    // var path = RNFS.DocumentDirectoryPath + '/test.txt';\n    // // write the file\n    // RNFS.writeFile(path, 'Lorem ipsum dolor sit amet', 'utf8')\n    //   .then((success) => {\n    //     console.log('FILE WRITTEN!');\n    //   })\n    //   .catch((err) => {\n    //     console.log(err.message);\n    //   });\n    // console.log('path', path)\n\n    // let fileUri = FileSystem.documentDirectory + inventoryDownload\n    // console.log('file uri', fileUri)\n    // await FileSystem.writeAsStringAsync(fileUri, inventoryHref, { encoding: FileSystem.EncodingType.UTF8 });\n    // const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n    // if (status === \"granted\") {\n    //     await FileSystem.writeAsStringAsync(fileUri, inventoryHref, { encoding: FileSystem.EncodingType.UTF8 });\n    //     console.log('createAsset', fileUri)\n    //     const asset = await MediaLibrary.createAssetAsync(fileUri)\n    //     await MediaLibrary.createAlbumAsync(\"FFBESync Downloads\", asset, false)\n    // }\n  }\n\n  return (\n    <View id=\"download-button-container\" style={styles.downloadButtonContainer}>\n      <TouchableOpacity style={styles.downloadButton} onPress={() => downloadInvetory(data)}><Text>Inventory</Text></TouchableOpacity>\n      <TouchableOpacity style={styles.downloadButton}><Text>Units</Text></TouchableOpacity>\n      <TouchableOpacity style={styles.downloadButton}><Text>Espers</Text></TouchableOpacity>\n      <TouchableOpacity style={styles.downloadButton}><Text>Consumables</Text></TouchableOpacity>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    width: \"100%\"\n  },\n  downloadButton: {\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10,\n  },\n  downloadButtonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 10,\n  },\n  googleSignInButton: {\n    marginTop: 5,\n    marginBottom: 5,\n    width: 190,\n    height: 45,\n    backgroundColor: '#4285f4',\n    // borderColor:'white',\n    // borderWidth:2,\n    borderRadius: 2,\n    flexDirection: 'row',\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5,\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3,\n  },\n  loadingcontainer: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  // horizontal: {\n  //   flexDirection: \"row\",\n  //   justifyContent: \"space-around\",\n  //   padding: 10\n  // }\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"script"}