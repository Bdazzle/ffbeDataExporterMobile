{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAppLoadingLifecycleEmitter = getAppLoadingLifecycleEmitter;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _fbemitter = require(\"fbemitter\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _AppLoadingNativeWrapper = _interopRequireDefault(require(\"./AppLoadingNativeWrapper\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar AppLoading = function (_React$Component) {\n  (0, _inherits2.default)(AppLoading, _React$Component);\n\n  var _super = _createSuper(AppLoading);\n\n  function AppLoading() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AppLoading);\n    _this = _super.apply(this, arguments);\n    _this._isMounted = false;\n\n    _this._startLoadingAppResourcesAsync = function _callee() {\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (_this.props.onFinish) {\n                _context.next = 2;\n                break;\n              }\n\n              throw new Error('AppLoading onFinish prop is required if startAsync is provided');\n\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return _regenerator.default.awrap(_this.props.startAsync());\n\n            case 5:\n              _context.next = 16;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](2);\n\n              if (_this._isMounted) {\n                _context.next = 11;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 11:\n              if (!_this.props.onError) {\n                _context.next = 15;\n                break;\n              }\n\n              _this.props.onError(_context.t0);\n\n              _context.next = 16;\n              break;\n\n            case 15:\n              throw _context.t0;\n\n            case 16:\n              _context.prev = 16;\n\n              if (_this._isMounted) {\n                _context.next = 19;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 19:\n              if (_this.props.onFinish) {\n                _this.props.onFinish();\n              }\n\n              return _context.finish(16);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 7, 16, 21]], Promise);\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(AppLoading, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n\n      _emitEvent('componentDidMount');\n\n      if (this.props.startAsync) {\n        this._startLoadingAppResourcesAsync().catch(function (error) {\n          console.error(\"AppLoading threw an unexpected error when loading:\\n\" + error.stack);\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n\n      _emitEvent('componentWillUnmount');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_AppLoadingNativeWrapper.default, (0, _extends2.default)({}, this.props));\n    }\n  }]);\n  return AppLoading;\n}(_react.default.Component);\n\nexports.default = AppLoading;\nvar _lifecycleEmitter = null;\n\nfunction _emitEvent(event) {\n  if (_lifecycleEmitter) {\n    _lifecycleEmitter.emit(event);\n  }\n}\n\nfunction getAppLoadingLifecycleEmitter() {\n  if (!_lifecycleEmitter) {\n    _lifecycleEmitter = new _fbemitter.EventEmitter();\n  }\n\n  return _lifecycleEmitter;\n}","map":{"version":3,"sources":["../../src/launch/AppLoading.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;IAeqB,U;;;;;AAArB,wBAAA;AAAA;;AAAA;;AACE,UAAA,UAAA,GAAsB,KAAtB;;AAoBA,UAAA,8BAAA,GAAiC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAC1B,MAAK,KAAL,CAAW,QADe;AAAA;AAAA;AAAA;;AAAA,oBAEvB,IAAI,KAAJ,CAAU,gEAAV,CAFuB;;AAAA;AAAA;AAAA;AAAA,gDAMvB,MAAK,KAAL,CAAW,UAAX,EANuB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,kBAQxB,MAAK,UARmB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,mBAUzB,MAAK,KAAL,CAAW,OAVc;AAAA;AAAA;AAAA;;AAW3B,oBAAK,KAAL,CAAW,OAAX;;AAX2B;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA,kBAgBxB,MAAK,UAhBmB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAoB7B,kBAAI,MAAK,KAAL,CAAW,QAAf,EAAyB;AACvB,sBAAK,KAAL,CAAW,QAAX;AACD;;AAtB4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjC;;AArBF;AAkDC;;;;wCA/CkB;AACf,WAAK,UAAL,GAAkB,IAAlB;;AACA,MAAA,UAAU,CAAC,mBAAD,CAAV;;AAIA,UAAI,KAAK,KAAL,CAAW,UAAf,EAA2B;AACzB,aAAK,8BAAL,GAAsC,KAAtC,CAA4C,UAAA,KAAK,EAAG;AAClD,UAAA,OAAO,CAAC,KAAR,0DAAqE,KAAK,CAAC,KAA3E;AACD,SAFD;AAGD;AACF;;;2CAEmB;AAClB,WAAK,UAAL,GAAkB,KAAlB;;AACA,MAAA,UAAU,CAAC,sBAAD,CAAV;AACD;;;6BA4BK;AACJ,aAAO,eAAA,aAAA,CAAC,gCAAD,EAAiB,uBAAA,EAAA,EAAK,KAAK,KAAV,CAAjB,CAAP;AACD;;;EAjDqC,eAAM,S;;;AAoD9C,IAAI,iBAAiB,GAAwB,IAA7C;;AAEA,SAAS,UAAT,CAAoB,KAApB,EAAiC;AAC/B,MAAI,iBAAJ,EAAuB;AACrB,IAAA,iBAAiB,CAAC,IAAlB,CAAuB,KAAvB;AACD;AACF;;AAEK,SAAU,6BAAV,GAAuC;AAC3C,MAAI,CAAC,iBAAL,EAAwB;AACtB,IAAA,iBAAiB,GAAG,IAAI,uBAAJ,EAApB;AACD;;AACD,SAAO,iBAAP;AACD","sourcesContent":["import { EventEmitter } from 'fbemitter';\nimport React from 'react';\n\nimport NativeAppLoading from './AppLoadingNativeWrapper';\n\ntype Props =\n  | {\n      startAsync?: () => Promise<void>;\n      onError?: (error: Error) => void;\n      onFinish?: () => void;\n      autoHideSplash?: boolean;\n    }\n  | {\n      startAsync: null;\n      onError: null;\n      onFinish: null;\n    };\n\nexport default class AppLoading extends React.Component<Props> {\n  _isMounted: boolean = false;\n\n  componentDidMount() {\n    this._isMounted = true;\n    _emitEvent('componentDidMount');\n\n    // startAsync is optional, you can do this process manually if you prefer (this is mainly for\n    // backwards compatibility and it is not recommended)\n    if (this.props.startAsync) {\n      this._startLoadingAppResourcesAsync().catch(error => {\n        console.error(`AppLoading threw an unexpected error when loading:\\n${error.stack}`);\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    _emitEvent('componentWillUnmount');\n  }\n\n  _startLoadingAppResourcesAsync = async () => {\n    if (!this.props.onFinish) {\n      throw new Error('AppLoading onFinish prop is required if startAsync is provided');\n    }\n\n    try {\n      await this.props.startAsync!();\n    } catch (e) {\n      if (!this._isMounted) return;\n\n      if (this.props.onError) {\n        this.props.onError(e);\n      } else {\n        throw e;\n      }\n    } finally {\n      if (!this._isMounted) return;\n\n      // If we get to this point then we know that either there was no error, or the error was\n      // handled.\n      if (this.props.onFinish) {\n        this.props.onFinish();\n      }\n    }\n  };\n\n  render() {\n    return <NativeAppLoading {...this.props} />;\n  }\n}\n\nlet _lifecycleEmitter: EventEmitter | null = null;\n\nfunction _emitEvent(event: string): void {\n  if (_lifecycleEmitter) {\n    _lifecycleEmitter.emit(event);\n  }\n}\n\nexport function getAppLoadingLifecycleEmitter(): EventEmitter {\n  if (!_lifecycleEmitter) {\n    _lifecycleEmitter = new EventEmitter();\n  }\n  return _lifecycleEmitter;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}