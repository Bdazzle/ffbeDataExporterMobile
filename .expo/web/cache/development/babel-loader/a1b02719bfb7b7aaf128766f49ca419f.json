{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _ExponentNotificationsHelper = require(\"./ExponentNotificationsHelper.web\");\n\nvar _Notifications = require(\"./Notifications\");\n\nif (_ExecutionEnvironment.canUseDOM && 'serviceWorker' in navigator) {\n  navigator.serviceWorker.addEventListener('message', function (event) {\n    (0, _Notifications.emitNotification)(event.data);\n  });\n  navigator.serviceWorker.addEventListener('pushsubscriptionchange', function _callee(event) {\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap((0, _ExponentNotificationsHelper.getExponentPushTokenAsync)());\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  });\n}","map":{"version":3,"sources":["../../src/Notifications/ExponentNotifications.fx.web.ts"],"names":[],"mappings":";;;;AAAA;;AAEA;;AACA;;AAEA,IAAI,mCAAa,mBAAmB,SAApC,EAA+C;AAC7C,EAAA,SAAS,CAAC,aAAV,CAAwB,gBAAxB,CAAyC,SAAzC,EAAoD,UAAA,KAAK,EAAG;AAC1D,yCAAiB,KAAK,CAAC,IAAvB;AACD,GAFD;AAIA,EAAA,SAAS,CAAC,aAAV,CAAwB,gBAAxB,CAAyC,wBAAzC,EAAmE,iBAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAE3D,6DAF2D;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnE;AAID","sourcesContent":["import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nimport { getExponentPushTokenAsync } from './ExponentNotificationsHelper.web';\nimport { emitNotification } from './Notifications';\n\nif (canUseDOM && 'serviceWorker' in navigator) {\n  navigator.serviceWorker.addEventListener('message', event => {\n    emitNotification(event.data);\n  });\n\n  navigator.serviceWorker.addEventListener('pushsubscriptionchange', async event => {\n    // Updates Expo token with new device token.\n    await getExponentPushTokenAsync();\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}