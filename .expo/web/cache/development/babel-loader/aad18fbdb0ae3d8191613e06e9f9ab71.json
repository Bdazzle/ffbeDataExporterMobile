{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"/Users/janic/Developer/react-native-fbsdk/src/FBLoginButton.js\";\n\nvar LoginButton = function (_React$Component) {\n  (0, _inherits2.default)(LoginButton, _React$Component);\n\n  function LoginButton() {\n    (0, _classCallCheck2.default)(this, LoginButton);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LoginButton).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(LoginButton, [{\n    key: \"_eventHandler\",\n    value: function _eventHandler(event) {\n      var eventDict = event.nativeEvent;\n\n      if (eventDict.type === 'loginFinished') {\n        if (this.props.onLoginFinished) {\n          this.props.onLoginFinished(eventDict.error, eventDict.result);\n        }\n      } else if (eventDict.type === 'logoutFinished') {\n        if (this.props.onLogoutFinished) {\n          this.props.onLogoutFinished();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RCTFBLoginButton, (0, _extends2.default)({}, this.props, {\n        onChange: this._eventHandler.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }));\n    }\n  }]);\n  return LoginButton;\n}(React.Component);\n\n(0, _defineProperty2.default)(LoginButton, \"defaultProps\", void 0);\n\nvar styles = _reactNative.StyleSheet.create({\n  defaultButtonStyle: {\n    height: 30,\n    width: 190\n  }\n});\n\nLoginButton.defaultProps = {\n  style: styles.defaultButtonStyle\n};\nvar RCTFBLoginButton = (0, _reactNative.requireNativeComponent)('RCTFBLoginButton');\nmodule.exports = LoginButton;","map":{"version":3,"sources":["FBLoginButton.js"],"names":["LoginButton","React","Component","event","eventDict","styles","StyleSheet","defaultButtonStyle","height","width","style","RCTFBLoginButton","module"],"mappings":"AAsBA;;;;;;;;;;;;;;;;;;;;AAEA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;;;AAcMA,IAAAA,W;;;;;;;;;;kCA2CUG,K,EAAc;AAC1B,UAAMC,SAAS,GAAGD,KAAK,CAAvB,WAAA;;AACA,UAAIC,SAAS,CAATA,IAAAA,KAAJ,eAAA,EAAwC;AACtC,YAAI,KAAA,KAAA,CAAJ,eAAA,EAAgC;AAC9B,eAAA,KAAA,CAAA,eAAA,CAA2BA,SAAS,CAApC,KAAA,EAA4CA,SAAS,CAArD,MAAA;AAEH;AAJD,OAAA,MAIO,IAAIA,SAAS,CAATA,IAAAA,KAAJ,gBAAA,EAAyC;AAC9C,YAAI,KAAA,KAAA,CAAJ,gBAAA,EAAiC;AAC/B,eAAA,KAAA,CAAA,gBAAA;AAEH;AACF;;;;6BAEQ;AACP,aACE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EACM,KADN,KAAA,EAAA;AAEE,QAAA,QAAQ,EAAE,KAAA,aAAA,CAAA,IAAA,CAFZ,IAEY,CAFZ;AAAA,QAAA,MAAA,EAAA,IAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EADF;AACE;AAAA,OAAA,CAAA,CADF;;;;EAzDsBH,KAAK,CAACC,S,CAA1BF;;8BAAAA,W;;AAkEN,IAAMK,MAAM,GAAGC,YAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAkB;AAC/BC,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,MAAM,EADY,EAAA;AAElBC,IAAAA,KAAK,EAHT;AACsB;AADW,CAAlBH,CAAf;;AAOAN,WAAW,CAAXA,YAAAA,GAA2B;AACzBU,EAAAA,KAAK,EAAEL,MAAM,CADfL;AAA2B,CAA3BA;AAIA,IAAMW,gBAAgB,GAAG,CAAA,GAAA,YAAA,CAAA,sBAAA,EAAzB,kBAAyB,CAAzB;AAEAC,MAAM,CAANA,OAAAA,GAAAA,WAAAA","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,\n * copy, modify, and distribute this software in source code or binary form for use\n * in connection with the web services and APIs provided by Facebook.\n *\n * As with any software that integrates with the Facebook platform, your use of\n * this software is subject to the Facebook Developer Principles and Policies\n * [http://developers.facebook.com/policy/]. This copyright notice shall be\n * included in all copies or substantial portions of the software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @flow\n * @format\n */\n'use strict';\n\nimport * as React from 'react';\nimport {requireNativeComponent, StyleSheet} from 'react-native';\n\nimport type {\n  DefaultAudience,\n  LoginBehaviorAndroid,\n  LoginResult,\n} from './FBLoginManager';\n\ntype Event = Object;\ntype TooltipBehaviorIOS = 'auto' | 'force_display' | 'disable';\n\n/**\n * A button that initiates a log in or log out flow upon tapping.\n */\nclass LoginButton extends React.Component<{\n  /**\n   * Represents the permissions to request when the login button\n   * is pressed.\n   */\n  permissions?: Array<string>,\n\n  /**\n   * The callback invoked upon error/completion of a login request.\n   */\n  onLoginFinished?: (error: Object, result: LoginResult) => void,\n\n  /**\n   * The callback invoked upon completion of a logout request.\n   */\n  onLogoutFinished?: () => void,\n\n  /**\n   * The behavior to use when attempting a login.\n   * @platform android\n   */\n  loginBehaviorAndroid?: LoginBehaviorAndroid,\n\n  /**\n   * The default audience to target when attempting a login.\n   */\n  defaultAudience?: DefaultAudience,\n\n  /**\n   * For iOS only, the desired tooltip behavior.\n   * @platform ios\n   */\n  tooltipBehaviorIOS?: TooltipBehaviorIOS,\n\n  /**\n   * View style, if any.\n   */\n  style?: any,\n}> {\n  static defaultProps: {\n    style: typeof styles.defaultButtonStyle,\n  };\n\n  _eventHandler(event: Event) {\n    const eventDict = event.nativeEvent;\n    if (eventDict.type === 'loginFinished') {\n      if (this.props.onLoginFinished) {\n        this.props.onLoginFinished(eventDict.error, eventDict.result);\n      }\n    } else if (eventDict.type === 'logoutFinished') {\n      if (this.props.onLogoutFinished) {\n        this.props.onLogoutFinished();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <RCTFBLoginButton\n        {...this.props}\n        onChange={this._eventHandler.bind(this)}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  defaultButtonStyle: {\n    height: 30,\n    width: 190,\n  },\n});\n\nLoginButton.defaultProps = {\n  style: styles.defaultButtonStyle,\n};\n\nconst RCTFBLoginButton = requireNativeComponent<any>('RCTFBLoginButton');\n\nmodule.exports = LoginButton;\n"]},"metadata":{},"sourceType":"script"}