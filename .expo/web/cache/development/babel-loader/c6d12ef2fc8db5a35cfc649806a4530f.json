{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar ShareOpenGraphValueContainer = function () {\n  function ShareOpenGraphValueContainer(properties) {\n    (0, _classCallCheck2.default)(this, ShareOpenGraphValueContainer);\n    (0, _defineProperty2.default)(this, \"_properties\", void 0);\n    this._properties = properties ? properties : {};\n  }\n\n  (0, _createClass2.default)(ShareOpenGraphValueContainer, [{\n    key: \"putNumber\",\n    value: function putNumber(key, number) {\n      this._properties[key] = {\n        type: 'number',\n        value: number\n      };\n    }\n  }, {\n    key: \"putObject\",\n    value: function putObject(key, object) {\n      this._properties[key] = {\n        type: 'open-graph-object',\n        value: object\n      };\n    }\n  }, {\n    key: \"putPhoto\",\n    value: function putPhoto(key, photo) {\n      this._properties[key] = {\n        type: 'photo',\n        value: photo\n      };\n    }\n  }, {\n    key: \"putString\",\n    value: function putString(key, string) {\n      this._properties[key] = {\n        type: 'string',\n        value: string\n      };\n    }\n  }, {\n    key: \"getEntry\",\n    value: function getEntry(key) {\n      return this._properties[key];\n    }\n  }]);\n  return ShareOpenGraphValueContainer;\n}();\n\nmodule.exports = ShareOpenGraphValueContainer;","map":{"version":3,"sources":["FBShareOpenGraphValueContainer.js"],"names":["ShareOpenGraphValueContainer","properties","key","number","type","value","object","photo","string","module"],"mappings":"AAuBA;;;;;;;;;;AAcMA,IAAAA,4B;AAGJ,WAAA,4BAAA,CAAA,UAAA,EAA8C;AAAA,KAAA,GAAA,gBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,4BAAA;AAAA,KAAA,GAAA,gBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,aAAA,EAAA,KAAA,CAAA;AAC5C,SAAA,WAAA,GAAmBC,UAAU,GAAA,UAAA,GAA7B,EAAA;;;;;8BAMQC,G,EAAaC,M,EAAgB;AACrC,WAAA,WAAA,CAAA,GAAA,IAAwB;AAACC,QAAAA,IAAI,EAAL,QAAA;AAAiBC,QAAAA,KAAK,EAA9C;AAAwB,OAAxB;;;;8BAMQH,G,EAAaI,M,EAAsC;AAC3D,WAAA,WAAA,CAAA,GAAA,IAAwB;AAACF,QAAAA,IAAI,EAAL,mBAAA;AAA4BC,QAAAA,KAAK,EAAzD;AAAwB,OAAxB;;;;6BAMOH,G,EAAaK,K,EAAmB;AACvC,WAAA,WAAA,CAAA,GAAA,IAAwB;AAACH,QAAAA,IAAI,EAAL,OAAA;AAAgBC,QAAAA,KAAK,EAA7C;AAAwB,OAAxB;;;;8BAMQH,G,EAAaM,M,EAAgB;AACrC,WAAA,WAAA,CAAA,GAAA,IAAwB;AAACJ,QAAAA,IAAI,EAAL,QAAA;AAAiBC,QAAAA,KAAK,EAA9C;AAAwB,OAAxB;;;;6BAMOH,G,EAA6B;AACpC,aAAO,KAAA,WAAA,CAAP,GAAO,CAAP;;;;GAvCEF;;AA2CNS,MAAM,CAANA,OAAAA,GAAAA,4BAAAA","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc. All rights reserved.\n *\n * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,\n * copy, modify, and distribute this software in source code or binary form for use\n * in connection with the web services and APIs provided by Facebook.\n *\n * As with any software that integrates with the Facebook platform, your use of\n * this software is subject to the Facebook Developer Principles and Policies\n * [http://developers.facebook.com/policy/]. This copyright notice shall be\n * included in all copies or substantial portions of the software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {SharePhoto} from './FBSharePhoto';\n\ntype OpenGraphProperties = {[key: string]: OpenGraphValue};\ntype OpenGraphValue = {\n  type: OpenGraphValueType,\n  value: any,\n};\ntype OpenGraphValueType = 'number' | 'open-graph-object' | 'photo' | 'string';\n\n/**\n * Represents an interface for adding and retrieving values to open graph objects and actions.\n */\nclass ShareOpenGraphValueContainer {\n  _properties: OpenGraphProperties;\n\n  constructor(properties: ?OpenGraphProperties) {\n    this._properties = properties ? properties : {};\n  }\n\n  /**\n   * Sets a number for the specified key.\n   */\n  putNumber(key: string, number: number) {\n    this._properties[key] = {type: 'number', value: number};\n  }\n\n  /**\n   * Sets an open graph object for the specified key.\n   */\n  putObject(key: string, object: ShareOpenGraphValueContainer) {\n    this._properties[key] = {type: 'open-graph-object', value: object};\n  }\n\n  /**\n   * Sets a photo for the specified key.\n   */\n  putPhoto(key: string, photo: SharePhoto) {\n    this._properties[key] = {type: 'photo', value: photo};\n  }\n\n  /**\n   * Sets a string for the specified key.\n   */\n  putString(key: string, string: string) {\n    this._properties[key] = {type: 'string', value: string};\n  }\n\n  /**\n   * Gets an entry for the given key.\n   */\n  getEntry(key: string): OpenGraphValue {\n    return this._properties[key];\n  }\n}\n\nmodule.exports = ShareOpenGraphValueContainer;\n"]},"metadata":{},"sourceType":"script"}