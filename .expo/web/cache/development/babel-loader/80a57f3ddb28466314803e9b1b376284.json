{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = registerRootComponent;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _withExpoRoot = _interopRequireDefault(require(\"./withExpoRoot\"));\n\nfunction registerRootComponent(component) {\n  var _document$getElementB;\n\n  var App = (0, _withExpoRoot.default)(component);\n\n  var RootComponent = function RootComponent(props) {\n    return React.createElement(App, (0, _extends2.default)({}, props));\n  };\n\n  _reactNative.AppRegistry.registerComponent('main', function () {\n    return RootComponent;\n  });\n\n  var rootTag = (_document$getElementB = document.getElementById('root')) != null ? _document$getElementB : document.getElementById('main');\n\n  _reactNative.AppRegistry.runApplication('main', {\n    rootTag: rootTag\n  });\n}","map":{"version":3,"sources":["../../src/launch/registerRootComponent.web.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;AAGc,SAAU,qBAAV,CACZ,SADY,EACqB;AAAA;;AAEjC,MAAM,GAAG,GAAG,2BAAa,SAAb,CAAZ;;AACA,MAAM,aAAa,GAAgB,SAA7B,aAA6B,CAAA,KAAK;AAAA,WAAI,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI,uBAAA,EAAA,EAAK,KAAL,CAAJ,CAAJ;AAAA,GAAxC;;AACA,2BAAY,iBAAZ,CAA8B,MAA9B,EAAsC;AAAA,WAAM,aAAN;AAAA,GAAtC;;AACA,MAAM,OAAO,4BAAG,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAAH,oCAAsC,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAAnD;;AACA,2BAAY,cAAZ,CAA2B,MAA3B,EAAmC;AAAE,IAAA,OAAO,EAAP;AAAF,GAAnC;AACD","sourcesContent":["import * as React from 'react';\nimport { AppRegistry } from 'react-native';\n\nimport withExpoRoot from './withExpoRoot';\nimport { InitialProps } from './withExpoRoot.types';\n\nexport default function registerRootComponent<P extends InitialProps>(\n  component: React.ComponentType<P>\n): void {\n  const App = withExpoRoot(component);\n  const RootComponent: React.FC<P> = props => <App {...props} />;\n  AppRegistry.registerComponent('main', () => RootComponent);\n  const rootTag = document.getElementById('root') ?? document.getElementById('main');\n  AppRegistry.runApplication('main', { rootTag });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}